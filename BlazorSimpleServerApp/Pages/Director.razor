@page "/director"
@using BlazorSimpleServerApp.Data
@inject DirectorDataService DirectorService
<h1>Director</h1>

<RadzenGrid @ref="directorGrid"  AllowSorting="true" Data="@directorDatas" TItem="DirectorData" AllowColumnResize="true">
    <Columns>
        <RadzenGridColumn TItem="DirectorData" Context="data" Property="NewFileName" Title="File Name">
            <Template>
                @{string sourcePath = DirectorService.DirectorDirectory + data.NewFileName;
                }
                <a href="@sourcePath" target="blank">@data.NewFileName</a>
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="DirectorData" Property="OldFileName" Title="Old File Name">
        </RadzenGridColumn>
        <RadzenGridColumn TItem="DirectorData" Property="Account" Title="Account">
        </RadzenGridColumn>
        <RadzenGridColumn TItem="DirectorData" Property="Date" Title="Date">
        </RadzenGridColumn>
        <RadzenGridColumn TItem="DirectorData" Property="DocumentType" Title="Document Type">
        </RadzenGridColumn>
        <RadzenGridColumn TItem="DirectorData" Property="PagesToRemove" Title="Pages To Remove">
        </RadzenGridColumn>
        <RadzenGridColumn TItem="DirectorData" Context="data" Property="NewFileName" Title="Note">
            <Template>
                <RadzenTextArea @bind-Value="@note" Placeholder="Enter note here..."></RadzenTextArea>
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="DirectorData" Context="data" Property="NewFileName" Title="Reject Option">
            <Template>
                <RadzenButton ButtonStyle="ButtonStyle.Danger" Size="ButtonSize.Medium" Click="@(args => UpdateJson(data.NewFileName,note))"> Reject</RadzenButton>
            </Template>
        </RadzenGridColumn>

    </Columns>
    </RadzenGrid>
@code {
    RadzenGrid<DirectorData> directorGrid;
    string note;
    List<DirectorData> directorDatas = new List<DirectorData>();
    protected override async Task OnInitializedAsync()
    {
        directorDatas = await DirectorService.GetDirectorDataAsync();
    }
    void UpdateJson(string fileName,string note)
    {
        directorDatas.RemoveAll(s => s.NewFileName == fileName);
        directorGrid.Reload();
        DirectorService.UpdateJson(fileName,note);
        note="";
    }
}
